id: sig53_new_narrowband
label: New Narrowband
category: '[sig53]'

templates:
  imports: from gnuradio import sig53
  make: sig53.new_narrowband(${vlen}, ${class_name}, ${dataset_length}, ${fft_size}, ${impairment_level}, ${sample_rate}, repeat=${repeat})

#  Make one 'parameters' list entry for every parameter you want settable from the GUI.
#     Keys include:
#     * id (makes the value accessible as keyname, e.g. in the make entry)
#     * label (label shown in the GUI)
#     * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#     * default
parameters:
- id: vlen
  label: Vector Length
  dtype: int
  default: 1024
- id: class_name
  label: Modulation Class
  dtype: string
  default: "16qam"
  options: [
    "ook",
    "4ask",
    "8ask",
    "16ask",
    "32ask",
    "64ask",
    "2fsk",
    "2gfsk",
    "2msk",
    "2gmsk",
    "4fsk",
    "4gfsk",
    "4msk",
    "4gmsk",
    "8fsk",
    "8gfsk",
    "8msk",
    "8gmsk",
    "16fsk",
    "16gfsk",
    "16msk",
    "16gmsk",
    "bpsk",
    "qpsk",
    "8psk",
    "16psk",
    "32psk",
    "64psk",
    "16qam",
    "32qam",
    "32qam_cross",
    "64qam",
    "128qam_cross",
    "256qam",
    "512qam_cross",
    "1024qam",
    "ofdm-64",
    "ofdm-72",
    "ofdm-128",
    "ofdm-180",
    "ofdm-256",
    "ofdm-300",
    "ofdm-512",
    "ofdm-600",
    "ofdm-900",
    "ofdm-1024",
    "ofdm-1200",
    "ofdm-2048",
    "fm",
    "am-dsb-sc",
    "am-dsb",
    "am-lsb",
    "am-usb",
    "lfm_data",
    "lfm_radar",
    "chirpss",
    "tone",
    "noise"
    ]
- id: fft_size
  label: FFT Size
  dtype: int
  default: 1024
- id: dataset_length
  label: Dataset Length
  dtype: int
  default: 1024 * 1024 * 10
- id: impairment_level
  label: Impairment Level
  dtype: int
  default: 1
- id: sample_rate
  label: Sample Rate
  dtype: float
  default: 20e6
- id: repeat
  label: Repeat
  dtype: bool
  default: False

#  Make one 'inputs' list entry per input and one 'outputs' list entry per output.
#  Keys include:
#      * label (an identifier for the GUI)
#      * domain (optional - stream or message. Default is stream)
#      * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#      * vlen (optional - data stream vector length. Default is 1)
#      * optional (optional - set to 1 for optional inputs. Default is 0)
outputs:
- label: generated
  domain: stream
  dtype: complex
  vlen: ${ vlen }
  optional: True
- label: datasetLabel
  domain: message
  dtype: pmt
  vlen: 1
  optional: True

#  'file_format' specifies the version of the GRC yml format used in the file
#  and should usually not be changed.
file_format: 1
